# -*- coding: utf-8 -*-
"""Assessment2.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1R6RrHsvQ1Vcxiv6ijy2GE1gQaDLVuv2h
"""

#1
import numpy as np
import pandas as pd

ar = np.array([1,2,3,4,5])
print("Max ",np.max(ar))
print("Min ",np.min(ar))
print("Sum ",np.sum(ar))
print("Mean ",np.mean(ar))
print("Standard Deviation ",np.std(ar))

#2
health_data = np.array([[160, 70, 30],   # height, weight, age for individual 1
                        [165, 65, 35],   # height, weight, age for individual 2
                        [170, 75, 40]])  # height, weight, age for individual 3

height_mean = np.mean(health_data[:,0])
print(height_mean)
weight_mean = np.mean(health_data[:,1])
print(weight_mean)

#3
marks = np.array([[30, 70, 80], [40, -1, 80], [25, 60, -1]])
averages = []
for i in marks:
  avg = np.mean(i[i != -1])
  averages.append(avg)
print(averages)

#4
temp = np.linspace(15,25,24)
print(temp)

#5
import numpy as np
import pandas as pd
daily_closing_prices = np.array([100, 102, 98, 105, 107, 110, 108, 112, 115, 118, 120])
df = pd.Series(daily_closing_prices)
window_size = 5
moving_avg = df[:].rolling(window=window_size).mean()

#6

#7
import numpy as np
properties_matrix = np.array([[1, 2, 3],
                              [4, 5, 6],
                              [7, 8, 9]])

#8
mat = np.array([1,2,3,
                4,5,6,
                7,8,9])
filtered = []
for i in mat:
  if i>5:
    filtered.append(True)
  else:
    filtered.append(False)

newarr = mat[filtered]
print(newarr)

#9
data = {'Name': ['Alice', 'Bob', 'Charlie', 'David', 'Eve', 'Frank', 'Grace'],
        'Age': [25, 30, 35, 40, 45, 50, 55],
        'City': ['New York', 'Los Angeles', 'Chicago', 'Houston', 'Phoenix', 'Miami', 'Boston'],
        'Department': ['HR', 'IT', 'Finance', 'Marketing', 'Sales', 'IT', 'HR']}

#10
import pandas as pd
data = {'Department': ['Electronics', 'Electronics', 'Clothing', 'Clothing', 'Home Goods'],
        'Salesperson': ['Alice', 'Bob', 'Charlie', 'David', 'Eve'],
        'Sales': [70000, 50000, 30000, 40000, 60000]}

df = pd.DataFrame(data)
avg_salesperson = df.groupby(['Department','Salesperson'])['Sales'].mean().reset_index()
avg_department = avg_salesperson.groupby(['Department'])['Sales'].mean().reset_index()
sorted = avg_department.sort_values(by='Sales',ascending=False)
print(sorted)

#11
data = {
    'Product': ['Apples', 'Bananas', 'Cherries', 'Dates', 'Elderberries', 'Flour', 'Grapes'],
    'Category': ['Fruit', 'Fruit', 'Fruit', 'Fruit', 'Fruit', 'Bakery', 'Fruit'],
    'Price': [1.20, 0.50, 3.00, 2.50, 4.00, 1.50, 2.00],
    'Promotion': [True, False, True, True, False, True, False]
}
pf = pd.DataFrame(data)
pf =df[['Price']] > df['Price'].mean()
print(pf)

#12
employee_data = {
    'Employee': ['Alice', 'Bob', 'Charlie', 'David'],
    'Department': ['HR', 'IT', 'Finance', 'IT'],
    'Manager': ['John', 'Rachel', 'Emily', 'Rachel']
}

# Dataset of employee project assignments
project_data = {
    'Employee': ['Alice', 'Charlie', 'Eve'],
    'Project': ['P1', 'P3', 'P2']
}
df = pd.DataFrame(employee_data)
pf = pd.DataFrame(project_data)
arr = df.merge(pf,on='Employee',how='inner')
print(arr)

#13
import pandas as pd
df = pd.read_csv('/content/Q13_sports_team_stats.csv')
df['Win Ratio'] = df['Wins']/df['GamesPlayed']
df['Average Scores'] = df.groupby('TeamID')['Wins'].mean()
print(df)

#14
pf = pd.read_csv('/content/Q14_customer_purchases.csv')
def func(member):
  if member:
    return "Yes"
  else:
    return "No"
pf['LoyaltyProgramSignUp'] = pd.to_datetime(pf['LoyaltyProgramSignUp'])
pf['Membership'] = pf['LoyaltyProgramSignUp'] < pf['Date']
pf['Member'] = pf['Membership'].apply(func)
print(pf.groupby('Membership')['PurchaseAmount'].sum())

#15
df = pd.read_csv('/content/Q15_student_grades.csv')
print("Subject Wise Average")
print(df.groupby('Subject')['Grade'].mean())

def func(Grade):
  if Grade<85:
    return "Yes"
  else:
    return "No"

df['Support?'] = df['Grade'].apply(func)
print(df)

















